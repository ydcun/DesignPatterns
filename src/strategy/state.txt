策略模式（strategy ）
首先策略模式是在简单工厂模式下进行的修改
分析问题：
	1.在简单工厂模式中我们添加或减少算法都会要去重新编译Factory类比较麻烦
	2.不同的运算需要提供不同的参数时候就要调用者直接与算法实现类进行直接接触
	
例子：现在给商场做一个软件要求:
	1.根据商品价格数量来获取总价格
	2.对购买的商品实行各种优惠（打八折，满300优惠100）等
分析：
	1.没一种打折当作一种算法的具体实现并都继承同一个方法
	2.根据不同的算法我们提供不同的计算变量
	2.在策略类中我们根据调用类传入的实例化算法类来进行计算

实现：
	1.创建满m送n的打折算法，该算法需要提供单价，购买数量，上限（满m），返利（送多少）；创建打折算法
	2.上面两算法都集成算法类
	3.创建策略类，该类在初始化的时候用户将具体的算法实现类传进来
	4.在策略类中创建获取价格的方法；该方法是用父类.getResult();类获取结果
注意：别以为策略类中的获取结果的方法没必要但是，我们再获取结果的时候有时候是有其他的条件来完成的；
	这些条件又不能暴露给用户
	这些条件也不能加到算法中去，因为不同条件写是不不同的条件；所有很有必要有这个方法